version: '3.8'
services:
  spire-agent:
    profiles:
      - "spire-agent"
    container_name: spire-agent
    image: {{.SPIREAgentImage}}
    pull_policy: "{{.ImagePullPolicy}}"
    command:
      - "-config"
      - "/etc/spire/conf/agent.conf"
      - "-expandEnv"
    volumes:
      # for SPIRE config
      - "{{.ConfigPath}}:/etc"
      # for SPIRE socket
      - "/var/run/:/var/run/"
      # for spire SVID persistence
      # TODO: this is not consumed right now due to user perms
      - "/var/lib/spire/agent:/var/lib/spire/agent"
    labels:
      app: spire-agent
    networks:
      accuknox-net:
        aliases:
          - spire-agent
    restart: on-failure:4
    ports:
      - "9091:9091"
      - "9090:9090"
    pid: "host"
    privileged: true

  wait-for-it:
    container_name: wait-for-it
    profiles:
      - "accuknox-agents"
    depends_on:
      spire-agent:
        condition: service_started
    image: "public.ecr.aws/k9v9d5v2/wait-for-it:latest"
    pull_policy: "{{.ImagePullPolicy}}"
    command: ["-t", "60", "spire-agent:9090"]
    labels:
      app: wait-for-it
    networks:
      accuknox-net:
        aliases:
          - wait-for-it

  kubearmor-init:
    profiles:
      - "kubearmor-only"
      - "kubearmor"
    container_name: kubearmor-init
    image: {{.KubeArmorInitImage}}
    pull_policy: "{{.ImagePullPolicy}}"
    labels:
      app: kubearmor-init
    volumes:
      - "/tmp:/opt/kubearmor/BPF:rw"
      - "/lib/modules:/lib/modules:ro"
      - "/sys/fs/bpf:/sys/fs/bpf:ro"
      - "/sys/kernel/security:/sys/kernel/security:ro"
      - "/sys/kernel/debug:/sys/kernel/debug:ro"
      - "/media/root/etc/os-release:/media/root/etc/os-release:ro"
    restart: on-failure:4
    privileged: true
    networks:
      accuknox-net:
        aliases:
          - kubearmor-init

  kubearmor:
    profiles:
      - "kubearmor-only"
      - "kubearmor"
    depends_on:
      kubearmor-init:
        condition: service_completed_successfully
    hostname: {{.Hostname}}
    container_name: kubearmor
    image: "{{.KubeArmorImage}}"
    pull_policy: "{{.ImagePullPolicy}}"
    command:
      - "-k8s=false"
      - "-enableKubeArmorPolicy"
      - "-enableKubeArmorHostPolicy"
      - "-visibility={{.KubeArmorVisibility}}"
      - "-hostVisibility={{.KubeArmorHostVisibility}}"
      - "-criSocket=unix:///var/run/docker.sock"
      - "-enableKubeArmorStateAgent"
      - "-defaultFilePosture={{.KubeArmorFilePosture}}"
      - "-defaultNetworkPosture={{.KubeArmorNetworkPosture}}"
      - "-defaultCapabilitiesPosture={{.KubeArmorCapPosture}}"
      - "-hostDefaultFilePosture={{.KubeArmorHostFilePosture}}"
      - "-hostDefaultNetworkPosture={{.KubeArmorHostNetworkPosture}}"
      - "-hostDefaultCapabilitiesPosture={{.KubeArmorHostCapPosture}}"
    labels:
      app: kubearmor
    volumes:
      - "/tmp:/opt/kubearmor/BPF:rw"
      - "/sys/fs/bpf:/sys/fs/bpf"
      - "/sys/kernel/security:/sys/kernel/security"
      - "/sys/kernel/debug:/sys/kernel/debug"
      - "/etc/apparmor.d:/etc/apparmor.d"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/run/docker:/run/docker"
      - "/var/lib/docker:/var/lib/docker"
    restart: on-failure:4
    ports:
      - "{{.KubeArmorPort}}:32767"
    networks:
      accuknox-net:
        aliases:
          - kubearmor
    pid: "host"
    privileged: true

  kubearmor-relay-server:
    profiles:
      - "accuknox-agents"
    depends_on:
      - kubearmor
    container_name: kubearmor-relay-server
    image: "{{.KubeArmorRelayServerImage}}"
    pull_policy: "{{.ImagePullPolicy}}"
    command:
      - "-enableReverseLogClient"
      - "-gRPCPort=32768"
    volumes:
      - "{{.ConfigPath}}:/opt"
    restart: on-failure:4
    labels:
      app: kubearmor-relay-server
    ports:
      - "32768:32768"
    networks:
      accuknox-net:
        aliases:
          - kubearmor-relay-server

  kubearmor-vm-adapter:
    profiles:
      - "kubearmor-only"
      - "kubearmor"
    depends_on:
      kubearmor:
        condition: service_started
    container_name: kubearmor-vm-adapter
    image: "{{.KubeArmorVMAdapterImage}}"
    pull_policy: "{{.ImagePullPolicy}}"
    command:
      - "--kubearmor-addr={{.KubeArmorURL}}"
      - "--relay-server-addr={{.RelayServerURL}}"
      - "--sia-addr={{.SIAAddr}}"
      - "--pea-addr={{.PEAAddr}}"
    labels:
      app: kubearmor-vm-adapter
    restart: on-failure:4
    volumes:
      - "{{.ConfigPath}}:/opt"
    networks:
      accuknox-net:
        aliases:
          - kubearmor-vm-adapter

  shared-informer-agent:
    profiles:
      - "accuknox-agents"
    depends_on:
      wait-for-it:
        condition: service_completed_successfully
      kubearmor:
        condition: service_started
      kubearmor-vm-adapter:
        condition: service_started
    container_name: shared-informer-agent
    image: "{{.SIAImage}}"
    pull_policy: "{{.ImagePullPolicy}}"
    command: ["-config-path", "/opt/sia/"]
    labels:
      app: shared-informer-agent
    volumes:
      - "{{.ConfigPath}}:/opt"
      - "/var/run:/var/run:ro"
    restart: on-failure:4
    pid: "host"
    ports:
      - "32769:32769"
    networks:
      accuknox-net:
        aliases:
          - shared-informer-agent

  feeder-service:
    profiles:
      - "accuknox-agents"
    depends_on:
      wait-for-it:
        condition: service_completed_successfully
      kubearmor-relay-server:
        condition: service_started
    container_name: feeder-service
    image: "{{.FeederImage}}"
    pull_policy: "{{.ImagePullPolicy}}"
    labels:
      app: feeder-service
    volumes:
      - "{{.ConfigPath}}:/opt"
      - "/var/run:/var/run:ro"
    restart: on-failure:4
    environment:
      - "ENABLE_VM=true"
      - "CLUSTER_NAME=default"
      - "HUBBLE_ENABLED=false"
      - "KAFKA_ENABLED=false"

      - "KUBEARMOR_ENABLED=true"
      - "KUBEARMOR_URL={{.RelayServerAddr}}"
      - "KUBEARMOR_PORT={{.RelayServerPort}}"

      - "KMUX_LOGS_ENABLED={{.EnableLogs}}"
      - "KMUX_CONFIG_PATH={{.KmuxConfigPathFS}}"

      - "SPIRE_AGENT_URL=unix:///var/run/spire/agent.sock"
      - "SPIRE_ENABLED=true"

    pid: "host"
    networks:
      accuknox-net:
        aliases:
          - feeder-service

  policy-enforcement-agent:
    profiles:
      - "accuknox-agents"
    depends_on:
      wait-for-it:
        condition: service_completed_successfully
      kubearmor-relay-server:
        condition: service_started
      kubearmor-vm-adapter:
        condition: service_started
    container_name: policy-enforcement-agent
    image: "{{.PEAImage}}"
    pull_policy: "{{.ImagePullPolicy}}"
    command: ["-config-path", "/opt/pea/"]
    labels:
      app: policy-enforcement-agent
    volumes:
      - "{{.ConfigPath}}:/opt"
      # for spire socket
      - "/var/run:/var/run:ro"
    restart: on-failure:4
    ports:
      - "32770:32770"
    pid: "host"
    networks:
      accuknox-net:
        aliases:
          - policy-enforcement-agent

networks:
  accuknox-net:
    name: accuknox-net
    ipam:
      config:
        - subnet: {{.NetworkCIDR}}
